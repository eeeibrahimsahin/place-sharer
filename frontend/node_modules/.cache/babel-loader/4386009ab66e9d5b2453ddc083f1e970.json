{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\places\\\\pages\\\\UpdatePlace.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch (err) {}\n    };\n\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, 'PATCH', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value\n      }), {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  if (!loadedPlace && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }\n    }, \"Could not find place!\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }\n  }), !isLoading && loadedPlace && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: loadedPlace.title,\n    initialValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min. 5 characters).\",\n    onInput: inputHandler,\n    initialValue: loadedPlace.description,\n    initialValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 6\n    }\n  }, \"UPDATE PLACE\")));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useState","useContext","useParams","useHistory","Input","Button","Card","LoadingSpinner","ErrorModal","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","AuthContext","UpdatePlace","auth","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","history","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","process","env","REACT_APP_BACKEND_URL","place","err","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst UpdatePlace = () => {\r\n\tconst auth = useContext(AuthContext);\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\tconst [ loadedPlace, setLoadedPlace ] = useState();\r\n\tconst placeId = useParams().placeId;\r\n\tconst history = useHistory();\r\n\r\n\tconst [ formState, inputHandler, setFormData ] = useForm(\r\n\t\t{\r\n\t\t\ttitle: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false\r\n\t\t\t},\r\n\t\t\tdescription: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tfalse\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchPlace = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\r\n\t\t\t\t\tsetLoadedPlace(responseData.place);\r\n\t\t\t\t\tsetFormData(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\t\tvalue: responseData.place.title,\r\n\t\t\t\t\t\t\t\tisValid: true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tdescription: {\r\n\t\t\t\t\t\t\t\tvalue: responseData.place.description,\r\n\t\t\t\t\t\t\t\tisValid: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t);\r\n\t\t\t\t} catch (err) {}\r\n\t\t\t};\r\n\t\t\tfetchPlace();\r\n\t\t},\r\n\t\t[ sendRequest, placeId, setFormData ]\r\n\t);\r\n\r\n\tconst placeUpdateSubmitHandler = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait sendRequest(\r\n\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n\t\t\t\t'PATCH',\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\ttitle: formState.inputs.title.value,\r\n\t\t\t\t\tdescription: formState.inputs.description.value\r\n\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: 'Bearer ' + auth.token\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\thistory.push('/' + auth.userId + '/places');\r\n\t\t} catch (err) {}\r\n\t};\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<div className=\"center\">\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!loadedPlace && !error) {\r\n\t\treturn (\r\n\t\t\t<div className=\"center\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<h2>Could not find place!</h2>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t{!isLoading &&\r\n\t\t\tloadedPlace && (\r\n\t\t\t\t<form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\telement=\"input\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tlabel=\"Title\"\r\n\t\t\t\t\t\tvalidators={[ VALIDATOR_REQUIRE() ]}\r\n\t\t\t\t\t\terrorText=\"Please enter a valid title.\"\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\tinitialValue={loadedPlace.title}\r\n\t\t\t\t\t\tinitialValid={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\telement=\"textarea\"\r\n\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\tvalidators={[ VALIDATOR_MINLENGTH(5) ]}\r\n\t\t\t\t\t\terrorText=\"Please enter a valid description (min. 5 characters).\"\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\tinitialValue={loadedPlace.description}\r\n\t\t\t\t\t\tinitialValid={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button type=\"submit\" disabled={!formState.isValid}>\r\n\t\t\t\t\t\tUPDATE PLACE\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default UpdatePlace;\r\n"]},"metadata":{},"sourceType":"module"}