{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\bucketlist\\\\pages\\\\BucketListPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BucketList from '../components/BucketList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport Switch from '../../shared/components/FormElements/SwitchView';\n\nconst BucketListPage = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const [nameOfListOwner, setNameOfListOnwer] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/bucketlist/${userId}`);\n        setLoadedPlaces(responseData.BucketList);\n        setNameOfListOnwer(responseData.name);\n      } catch (err) {}\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id._id !== deletedPlaceId));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"switchView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    to: `/${userId}/bucketList`,\n    className: \"toBucketList\",\n    size: \"middle\",\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, \"TO THIS USER'S BUCKET LIST\"), /*#__PURE__*/React.createElement(Switch, {\n    to: `/${userId}/bucketList`,\n    className: \"toBucketListMobile\",\n    size: \"middle\",\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, \"TO THIS USER'S BUCKET LIST\"), /*#__PURE__*/React.createElement(Switch, {\n    to: `/${userId}/places`,\n    className: \"toPlaceList\",\n    size: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, \"TO THIS USER'S PLACE LIST\"), /*#__PURE__*/React.createElement(Switch, {\n    to: `/${userId}/places`,\n    className: \"toPlaceListMobile\",\n    size: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, \"TO THIS USER'S PLACE LIST\")), /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  })), !isLoading && loadedPlaces && /*#__PURE__*/React.createElement(BucketList, {\n    items: loadedPlaces,\n    onDeletePlace: placeDeletedHandler,\n    userId: userId,\n    nameOfListOwner: nameOfListOwner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default BucketListPage;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/bucketlist/pages/BucketListPage.js"],"names":["React","useEffect","useState","useParams","BucketList","ErrorModal","LoadingSpinner","useHttpClient","Switch","BucketListPage","loadedPlaces","setLoadedPlaces","nameOfListOwner","setNameOfListOnwer","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","process","env","REACT_APP_BACKEND_URL","name","err","placeDeletedHandler","deletedPlaceId","prevPlaces","filter","place","id","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport BucketList from '../components/BucketList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Switch from '../../shared/components/FormElements/SwitchView';\r\n\r\nconst BucketListPage = () => {\r\n\tconst [ loadedPlaces, setLoadedPlaces ] = useState();\r\n\tconst [ nameOfListOwner, setNameOfListOnwer ] = useState();\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n\tconst userId = useParams().userId;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchPlaces = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/users/bucketlist/${userId}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoadedPlaces(responseData.BucketList);\r\n\t\t\t\t\tsetNameOfListOnwer(responseData.name);\r\n\t\t\t\t} catch (err) {}\r\n\t\t\t};\r\n\t\t\tfetchPlaces();\r\n\t\t},\r\n\t\t[ sendRequest, userId ]\r\n\t);\r\n\r\n\tconst placeDeletedHandler = (deletedPlaceId) => {\r\n\t\tsetLoadedPlaces((prevPlaces) => prevPlaces.filter((place) => place.id._id !== deletedPlaceId));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\r\n\t\t\t<div className=\"switchView\">\r\n\t\t\t<Switch to={`/${userId}/bucketList`} className=\"toBucketList\" size=\"middle\" inverse>\r\n\t\t\t\tTO THIS USER'S BUCKET LIST\r\n\t\t\t</Switch>\r\n\t\t\t<Switch to={`/${userId}/bucketList`} className=\"toBucketListMobile\" size=\"middle\" inverse>\r\n\t\t\t\tTO THIS USER'S BUCKET LIST\r\n\t\t\t</Switch>\r\n\t\t\t<Switch to={`/${userId}/places`} className=\"toPlaceList\" size=\"middle\" >\r\n\t\t\t\tTO THIS USER'S PLACE LIST\r\n\t\t\t</Switch>\r\n\t\t\t<Switch to={`/${userId}/places`} className=\"toPlaceListMobile\" size=\"middle\" >\r\n\t\t\t\tTO THIS USER'S PLACE LIST\r\n\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{!isLoading &&\r\n\t\t\tloadedPlaces && (\r\n\t\t\t\t<BucketList\r\n\t\t\t\t\titems={loadedPlaces}\r\n\t\t\t\t\tonDeletePlace={placeDeletedHandler}\r\n\t\t\t\t\tuserId={userId}\r\n\t\t\t\t\tnameOfListOwner={nameOfListOwner}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default BucketListPage;\r\n"]},"metadata":{},"sourceType":"module"}