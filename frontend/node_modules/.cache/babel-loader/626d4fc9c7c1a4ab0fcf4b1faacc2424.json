{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\user\\\\pages\\\\Auth.js\";\nimport React, { useState, useContext } from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/login`, 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/signup`, 'POST', formData);\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  const fbLoginHandler = async response => {\n    let pic;\n\n    try {\n      pic = response.picture.data.url;\n    } catch (err) {}\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/socialMedia/login`, 'POST', JSON.stringify({\n          email: response.email,\n          password: response.userID\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/socialMedia/signup`, 'POST', JSON.stringify({\n          image: pic,\n          name: response.name,\n          email: response.email,\n          password: response.userID\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  const responseGoogle = async response => {\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/socialMedia/login`, 'POST', JSON.stringify({\n          email: response.profileObj.email,\n          password: response.profileObj.googleId\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/socialMedia/signup`, 'POST', JSON.stringify({\n          image: response.profileObj.imageUrl,\n          name: response.profileObj.name,\n          email: response.profileObj.email,\n          password: response.profileObj.googleId\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }), isLoginMode ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 20\n    }\n  }, \"LOGIN\") : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, \"SIGN UP\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }), !isLoginMode && /*#__PURE__*/React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    errorText: \"Please provide an image.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 6\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP'), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(FacebookLogin, {\n    appId: \"288763052265295\",\n    fields: \"name,email,picture\",\n    onClick: fbLoginHandler,\n    callback: fbLoginHandler,\n    cssClass: \"my-facebook-button-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"524135467780-l6ng9s692tp2le5iidlardar8uo34ull.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(\"button\", {\n      className: \"my-google-button-class\",\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 8\n      }\n    }, \"LOGIN WITH GOOGLE\") //buttonText=\"Login using Google\"\n    ,\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN')));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/user/pages/Auth.js"],"names":["React","useState","useContext","FacebookLogin","GoogleLogin","Card","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttpClient","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","responseData","process","env","REACT_APP_BACKEND_URL","JSON","stringify","login","userId","token","err","formData","FormData","append","fbLoginHandler","response","pic","picture","data","url","userID","responseGoogle","profileObj","googleId","imageUrl","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n\tconst auth = useContext(AuthContext);\r\n\r\n\tconst [ isLoginMode, setIsLoginMode ] = useState(true);\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n\tconst [ formState, inputHandler, setFormData ] = useForm(\r\n\t\t{\r\n\t\t\temail: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tfalse\r\n\t);\r\n\r\n\tconst switchModeHandler = () => {\r\n\t\tif (!isLoginMode) {\r\n\t\t\tsetFormData(\r\n\t\t\t\t{\r\n\t\t\t\t\t...formState.inputs,\r\n\t\t\t\t\tname: undefined,\r\n\t\t\t\t\timage: undefined\r\n\t\t\t\t},\r\n\t\t\t\tformState.inputs.email.isValid && formState.inputs.password.isValid\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsetFormData(\r\n\t\t\t\t{\r\n\t\t\t\t\t...formState.inputs,\r\n\t\t\t\t\tname: {\r\n\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\tisValid: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\timage: {\r\n\t\t\t\t\t\tvalue: null,\r\n\t\t\t\t\t\tisValid: false\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t}\r\n\t\tsetIsLoginMode((prevMode) => !prevMode);\r\n\t};\r\n\r\n\tconst authSubmitHandler = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (isLoginMode) {\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\temail: formState.inputs.email.value,\r\n\t\t\t\t\t\tpassword: formState.inputs.password.value\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tauth.login(responseData.userId, responseData.token);\r\n\t\t\t} catch (err) {}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('email', formState.inputs.email.value);\r\n\t\t\t\tformData.append('name', formState.inputs.name.value);\r\n\t\t\t\tformData.append('password', formState.inputs.password.value);\r\n\t\t\t\tformData.append('image', formState.inputs.image.value);\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\tformData\r\n\t\t\t\t);\r\n\t\t\t\tauth.login(responseData.userId, responseData.token);\r\n\t\t\t} catch (err) {}\r\n\t\t}\r\n\t};\r\n\r\n\tconst fbLoginHandler = async (response) => {\r\n\t\tlet pic;\r\n\t\ttry {\r\n\t\t\tpic = response.picture.data.url;\r\n\t\t} catch (err) {}\r\n\r\n\t\tif (isLoginMode) {\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/socialMedia/login`,\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\temail: response.email,\r\n\t\t\t\t\t\tpassword: response.userID\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tauth.login(responseData.userId, responseData.token);\r\n\t\t\t} catch (err) {}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/socialMedia/signup`,\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\timage: pic,\r\n\t\t\t\t\t\tname: response.name,\r\n\t\t\t\t\t\temail: response.email,\r\n\t\t\t\t\t\tpassword: response.userID\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tauth.login(responseData.userId, responseData.token);\r\n\t\t\t} catch (err) {}\r\n\t\t}\r\n\t};\r\n\r\n\tconst responseGoogle = async (response) => {\r\n\t\tif (isLoginMode) {\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/socialMedia/login`,\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\temail: response.profileObj.email,\r\n\t\t\t\t\t\tpassword: response.profileObj.googleId\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tauth.login(responseData.userId, responseData.token);\r\n\t\t\t} catch (err) {}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/socialMedia/signup`,\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\timage: response.profileObj.imageUrl,\r\n\t\t\t\t\t\tname: response.profileObj.name,\r\n\t\t\t\t\t\temail: response.profileObj.email,\r\n\t\t\t\t\t\tpassword: response.profileObj.googleId\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tauth.login(responseData.userId, responseData.token);\r\n\t\t\t} catch (err) {}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t<Card className=\"authentication\">\r\n\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\r\n\t\t\t\t{isLoginMode ? <h2>LOGIN</h2> : <h2>SIGN UP</h2>}\r\n\t\t\t\t<hr />\r\n\t\t\t\t<form onSubmit={authSubmitHandler}>\r\n\t\t\t\t\t{!isLoginMode && (\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\telement=\"input\"\r\n\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tlabel=\"Your Name\"\r\n\t\t\t\t\t\t\tvalidators={[ VALIDATOR_REQUIRE() ]}\r\n\t\t\t\t\t\t\terrorText=\"Please enter a name.\"\r\n\t\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!isLoginMode && (\r\n\t\t\t\t\t\t<ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\telement=\"input\"\r\n\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tlabel=\"E-Mail\"\r\n\t\t\t\t\t\tvalidators={[ VALIDATOR_EMAIL() ]}\r\n\t\t\t\t\t\terrorText=\"Please enter a valid email address.\"\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\telement=\"input\"\r\n\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\tvalidators={[ VALIDATOR_MINLENGTH(6) ]}\r\n\t\t\t\t\t\terrorText=\"Please enter a valid password, at least 6 characters.\"\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button type=\"submit\" disabled={!formState.isValid}>\r\n\t\t\t\t\t\t{isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<pre />\r\n\t\t\t\t\t<FacebookLogin\r\n\t\t\t\t\t\tappId=\"288763052265295\"\r\n\t\t\t\t\t\tfields=\"name,email,picture\"\r\n\t\t\t\t\t\tonClick={fbLoginHandler}\r\n\t\t\t\t\t\tcallback={fbLoginHandler}\r\n\t\t\t\t\t\tcssClass=\"my-facebook-button-class\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<pre />\r\n\t\t\t\t\t<GoogleLogin\r\n\t\t\t\t\t\tclientId=\"524135467780-l6ng9s692tp2le5iidlardar8uo34ull.apps.googleusercontent.com\"\r\n\t\t\t\t\t\trender={(renderProps) => (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"my-google-button-class\"\r\n\t\t\t\t\t\t\t\tonClick={renderProps.onClick}\r\n\t\t\t\t\t\t\t\tdisabled={renderProps.disabled}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLOGIN WITH GOOGLE\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t//buttonText=\"Login using Google\"\r\n\t\t\t\t\t\tonSuccess={responseGoogle}\r\n\t\t\t\t\t\tonFailure={responseGoogle}\r\n\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t\t<Button inverse onClick={switchModeHandler}>\r\n\t\t\t\t\tSWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n\t\t\t\t</Button>\r\n\t\t\t</Card>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}