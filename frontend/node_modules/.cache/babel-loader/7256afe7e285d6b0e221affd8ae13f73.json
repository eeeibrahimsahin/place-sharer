{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\places\\\\components\\\\ReviewList.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport Review from './Review';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport Button from '../../shared/components/FormElements/Button';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport './ReviewList.css';\n\nfunction ReviewList(props) {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = auth.userId;\n  const placeId = props.placeId;\n  const [reviews, setReviews] = useState();\n  const [updateReviews, setUpdateReviews] = useState(0);\n  const [validInput, setValidInput] = useState(true);\n  const [reviewInput, setReviewInput] = useState(); // gets all of the reviews of a place\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/reviews/${placeId}`);\n        setReviews(responseData.reviews);\n      } catch (err) {}\n    };\n\n    fetchReviews();\n  }, [sendRequest, placeId, updateReviews]);\n\n  const inputHandler = e => {\n    setReviewInput(e.target.value);\n  };\n\n  const reviewSubmitHandler = async event => {\n    event.target.reset();\n    reviewInput ? setValidInput(true) : setValidInput(false);\n\n    if (validInput) {\n      const reviewDate = new Date();\n\n      try {\n        await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/reviews/newReview`, 'POST', JSON.stringify({\n          date: reviewDate,\n          userId: userId,\n          placeId: placeId,\n          reviewTxt: reviewInput\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json'\n        });\n      } catch (err) {}\n\n      setUpdateReviews(prevState => {\n        return prevState + 1;\n      });\n    }\n  };\n\n  const deleteReview = async deletedReviewId => {\n    setReviews(prevReview => prevReview.filter(review => review.id !== deletedReviewId));\n\n    try {\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/reviews/${deletedReviewId}/${userId}`, 'DELETE', null, {\n        Authorization: 'Bearer ' + auth.token\n      });\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }), reviews ? reviews.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"No reviews yet. Be the first to review! \")) : null, reviews && reviews.map(review => /*#__PURE__*/React.createElement(Review, {\n    key: review.id,\n    id: review.id,\n    deleteReview: deleteReview,\n    image: review.creator ? review.creator.image : null,\n    reviewBody: review.reviewTxt,\n    userId: review.userId,\n    date: review.date,\n    creator: review.creator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  })), isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 18\n    }\n  }), auth.isLoggedIn && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: reviewSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, \"POST REVIEW\")));\n}\n\nexport default ReviewList;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/places/components/ReviewList.js"],"names":["React","useState","useContext","useEffect","Review","ErrorModal","Button","AuthContext","useHttpClient","LoadingSpinner","ReviewList","props","auth","isLoading","error","sendRequest","clearError","userId","placeId","reviews","setReviews","updateReviews","setUpdateReviews","validInput","setValidInput","reviewInput","setReviewInput","fetchReviews","responseData","process","env","REACT_APP_BACKEND_URL","err","inputHandler","e","target","value","reviewSubmitHandler","event","reset","reviewDate","Date","JSON","stringify","date","reviewTxt","Authorization","token","prevState","deleteReview","deletedReviewId","prevReview","filter","review","id","length","map","creator","image","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport Review from './Review';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\nimport './ReviewList.css';\r\n\r\nfunction ReviewList(props) {\r\n\tconst auth = useContext(AuthContext);\r\n\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n\tconst userId = auth.userId;\r\n\tconst placeId = props.placeId;\r\n\tconst [ reviews, setReviews ] = useState();\r\n\r\n\tconst [ updateReviews, setUpdateReviews ] = useState(0);\r\n\tconst [ validInput, setValidInput ] = useState(true);\r\n\tconst [ reviewInput, setReviewInput ] = useState();\r\n\r\n\t// gets all of the reviews of a place\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchReviews = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/reviews/${placeId}`);\r\n\t\t\t\t\tsetReviews(responseData.reviews);\r\n\t\t\t\t} catch (err) {}\r\n\t\t\t};\r\n\t\t\tfetchReviews();\r\n\t\t},\r\n\t\t[ sendRequest, placeId, updateReviews ]\r\n\t);\r\n\tconst inputHandler = (e) => {\r\n\t\tsetReviewInput(e.target.value);\r\n\t};\r\n\tconst reviewSubmitHandler = async (event) => {\r\n\t\tevent.target.reset();\r\n\t\treviewInput ? setValidInput(true) : setValidInput(false);\r\n\t\tif (validInput) {\r\n\t\t\tconst reviewDate = new Date();\r\n\t\t\ttry {\r\n\t\t\t\tawait sendRequest(\r\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/reviews/newReview`,\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\tdate: reviewDate,\r\n\t\t\t\t\t\tuserId: userId,\r\n\t\t\t\t\t\tplaceId: placeId,\r\n\t\t\t\t\t\treviewTxt: reviewInput\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tAuthorization: 'Bearer ' + auth.token,\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} catch (err) {}\r\n\t\t\tsetUpdateReviews((prevState) => {\r\n\t\t\t\treturn prevState + 1;\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteReview = async (deletedReviewId) => {\r\n\t\tsetReviews((prevReview) => prevReview.filter((review) => review.id !== deletedReviewId));\r\n\t\ttry {\r\n\t\t\tawait sendRequest(\r\n\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/reviews/${deletedReviewId}/${userId}`,\r\n\t\t\t\t'DELETE',\r\n\t\t\t\tnull,\r\n\t\t\t\t{\r\n\t\t\t\t\tAuthorization: 'Bearer ' + auth.token\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (err) {}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2>Comments</h2>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t{/* <img className=\"place-photo\" src={props.placeUrl} alt={'the place '} /> */}\r\n\t\t\t{reviews ? (\r\n\t\t\t\treviews.length === 0 && (\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>No reviews yet. Be the first to review! </strong>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t\t{reviews &&\r\n\t\t\t\treviews.map((review) => (\r\n\t\t\t\t\t<Review\r\n\t\t\t\t\t\tkey={review.id}\r\n\t\t\t\t\t\tid={review.id}\r\n\t\t\t\t\t\tdeleteReview={deleteReview}\r\n\t\t\t\t\t\timage={review.creator? review.creator.image: null }\r\n\t\t\t\t\t\treviewBody={review.reviewTxt}\r\n\t\t\t\t\t\tuserId={review.userId}\r\n\t\t\t\t\t\tdate={review.date}\r\n\t\t\t\t\t\tcreator={review.creator}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t{isLoading && <LoadingSpinner asOverlay />}\r\n\t\t\t{auth.isLoggedIn && (\r\n\t\t\t\t<form onSubmit={reviewSubmitHandler}>\r\n\t\t\t\t\t<div className={`form-control`}>\r\n\t\t\t\t\t\t<input onChange={inputHandler} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button inverse type=\"submit\">\r\n\t\t\t\t\t\tPOST REVIEW\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default ReviewList;\r\n"]},"metadata":{},"sourceType":"module"}