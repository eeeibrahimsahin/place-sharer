{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\shared\\\\components\\\\UIElements\\\\StarRating.js\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactStars from \"react-rating-stars-component\";\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\";\nimport Modal from \"../UIElements/Modal\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport { AuthContext } from \"../../context/auth-context\";\nimport ErrorModal from \"./ErrorModal\";\nimport Button from \"../FormElements/Button\";\nimport ConfirmModal from \"./ConfirmModal\";\nimport \"./StarRating.css\";\n\nfunction StarRating({\n  placeId,\n  rate\n}) {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [rating, setRating] = useState(rate.averageRating);\n  const [ratingSameUser, setRatingSameUser] = useState(0);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showConfirmModal, setShowconfirmModal] = useState(false);\n  const [raterNumb, setRaterNumb] = useState(rate.raterRates.length);\n  const history = useHistory(); //Login Modal\n\n  const showWarningHandler = () => setShowLoginModal(true);\n\n  const closeWarningHandler = () => setShowLoginModal(false); //Confirm Modal\n\n\n  const showConfirmHandler = () => setShowconfirmModal(true);\n\n  const closeConfirmHandler = () => setShowconfirmModal(false);\n\n  const rateHandler = ratingValue => {\n    if (!auth.token) {\n      showWarningHandler();\n    } else {\n      if (rate.raterIds.includes(auth.userId)) {\n        setRatingSameUser(ratingValue);\n        showConfirmHandler();\n      } else {\n        setRating(ratingValue);\n        patchRates(ratingValue);\n      }\n    }\n  };\n\n  const patchRates = async ratingValue => {\n    closeConfirmHandler();\n\n    try {\n      const responseData = await sendRequest(`http://localhost:5000/api/places/rate/${placeId}`, \"PATCH\", JSON.stringify({\n        raterId: auth.userId,\n        raterRating: ratingValue || ratingSameUser\n      }), {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + auth.token\n      });\n      setRating(responseData.rate.averageRating);\n      setRaterNumb(responseData.rate.raterRates.length);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: showLoginModal,\n    onCancel: closeWarningHandler,\n    footerClass: \"place-item__modal-actions\",\n    footer: /*#__PURE__*/React.createElement(Button, {\n      inverse: true,\n      onClick: () => {\n        history.push(\"/auth\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Log In\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"You must be logged in to be able to rate \")), /*#__PURE__*/React.createElement(ConfirmModal, {\n    show: showConfirmModal,\n    onClear: closeConfirmHandler,\n    confirm: () => patchRates(ratingSameUser),\n    message: \" You've already rate this pleace, Do you want to change your rating\\r anyway..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"StarRating center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactStars, {\n    className: \"star\",\n    value: rating,\n    count: 5,\n    onChange: rateHandler,\n    size: 30,\n    half: true,\n    emptyIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 22\n      }\n    }),\n    halfIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-star-half-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }),\n    fullIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }),\n    color1: \"#e4e5e9\",\n    color2: \"#ffc107\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ratings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"(\" + raterNumb + \" ratings)\")));\n}\n\nexport default StarRating;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/shared/components/UIElements/StarRating.js"],"names":["React","useState","useContext","useHistory","ReactStars","LoadingSpinner","Modal","useHttpClient","AuthContext","ErrorModal","Button","ConfirmModal","StarRating","placeId","rate","auth","isLoading","error","sendRequest","clearError","rating","setRating","averageRating","ratingSameUser","setRatingSameUser","showLoginModal","setShowLoginModal","showConfirmModal","setShowconfirmModal","raterNumb","setRaterNumb","raterRates","length","history","showWarningHandler","closeWarningHandler","showConfirmHandler","closeConfirmHandler","rateHandler","ratingValue","token","raterIds","includes","userId","patchRates","responseData","JSON","stringify","raterId","raterRating","Authorization","err","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\";\r\nimport Modal from \"../UIElements/Modal\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport ErrorModal from \"./ErrorModal\";\r\nimport Button from \"../FormElements/Button\";\r\nimport ConfirmModal from \"./ConfirmModal\";\r\n\r\nimport \"./StarRating.css\";\r\n\r\nfunction StarRating({ placeId, rate }) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [rating, setRating] = useState(rate.averageRating);\r\n  const [ratingSameUser, setRatingSameUser] = useState(0);\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showConfirmModal, setShowconfirmModal] = useState(false);\r\n  const [raterNumb, setRaterNumb] = useState(rate.raterRates.length);\r\n\r\n  const history = useHistory();\r\n  //Login Modal\r\n  const showWarningHandler = () => setShowLoginModal(true);\r\n  const closeWarningHandler = () => setShowLoginModal(false);\r\n  //Confirm Modal\r\n  const showConfirmHandler = () => setShowconfirmModal(true);\r\n  const closeConfirmHandler = () => setShowconfirmModal(false);\r\n\r\n  const rateHandler = (ratingValue) => {\r\n    if (!auth.token) {\r\n      showWarningHandler();\r\n    } else {\r\n      if (rate.raterIds.includes(auth.userId)) {\r\n        setRatingSameUser(ratingValue);\r\n        showConfirmHandler();\r\n      } else {\r\n        setRating(ratingValue);\r\n        patchRates(ratingValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  const patchRates = async (ratingValue) => {\r\n    closeConfirmHandler();\r\n\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `http://localhost:5000/api/places/rate/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          raterId: auth.userId,\r\n          raterRating: ratingValue || ratingSameUser,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setRating(responseData.rate.averageRating);\r\n      setRaterNumb(responseData.rate.raterRates.length);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showLoginModal}\r\n        onCancel={closeWarningHandler}\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <Button\r\n            inverse\r\n            onClick={() => {\r\n              history.push(\"/auth\");\r\n            }}\r\n          >\r\n            Log In\r\n          </Button>\r\n        }\r\n      >\r\n        <p>You must be logged in to be able to rate </p>\r\n      </Modal>\r\n      <ConfirmModal\r\n        show={showConfirmModal}\r\n        onClear={closeConfirmHandler}\r\n        confirm={() => patchRates(ratingSameUser)}\r\n        message=\" You've already rate this pleace, Do you want to change your rating\r\n        anyway..\"\r\n      />\r\n      <div className=\"StarRating center\">\r\n    \r\n        <ReactStars\r\n          className=\"star\"\r\n          value={rating}\r\n          count={5}\r\n          onChange={rateHandler}\r\n          size={30}\r\n          half={true}\r\n          emptyIcon={<i className=\"far fa-star\" />}\r\n          halfIcon={<i className=\"fa fa-star-half-alt\" />}\r\n          fullIcon={<i className=\"fa fa-star\" />}\r\n          color1={\"#e4e5e9\"}\r\n          color2={\"#ffc107\"}\r\n        />\r\n        <span className=\"ratings\">{\"(\" + raterNumb + \" ratings)\"}</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StarRating;\r\n"]},"metadata":{},"sourceType":"module"}