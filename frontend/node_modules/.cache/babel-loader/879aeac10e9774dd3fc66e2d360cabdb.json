{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\places\\\\pages\\\\UserPlaces.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SearchContext } from \"../../shared/context/search-context\";\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Switch from \"../../shared/components/FormElements/SwitchView\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./UserPlaces.css\";\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const [userPlaces, setUserPlaces] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const {\n    inputHandler\n  } = useContext(SearchContext);\n  useEffect(() => {\n    inputHandler(\"search\", \"\", false);\n  }, [inputHandler]);\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\n        setLoadedPlaces(responseData.places);\n        setUserPlaces(responseData.name);\n      } catch (err) {}\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userPlaces-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"switchView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    to: `/${userId}/bucketList`,\n    className: \"toBucketList\",\n    size: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"TO THIS USER'S BUCKET LIST\"), /*#__PURE__*/React.createElement(Switch, {\n    to: `/${userId}/bucketList`,\n    className: \"toBucketListMobile\",\n    size: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"TO THIS USER'S BUCKET LIST\"), /*#__PURE__*/React.createElement(Switch, {\n    to: `/${userId}/places`,\n    className: \"toPlaceList\",\n    size: \"middle\",\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"TO THIS USER'S PLACE LIST\"), /*#__PURE__*/React.createElement(Switch, {\n    to: `/${userId}/places`,\n    className: \"toPlaceListMobile\",\n    size: \"middle\",\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"TO THIS USER'S PLACE LIST\")), /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), !isLoading && loadedPlaces && /*#__PURE__*/React.createElement(PlaceList, {\n    items: loadedPlaces,\n    userPlaces: userPlaces,\n    onDeletePlace: placeDeletedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default UserPlaces;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/places/pages/UserPlaces.js"],"names":["React","useEffect","useState","useContext","useParams","SearchContext","PlaceList","ErrorModal","LoadingSpinner","Switch","useHttpClient","UserPlaces","loadedPlaces","setLoadedPlaces","userPlaces","setUserPlaces","isLoading","error","sendRequest","clearError","inputHandler","userId","fetchPlaces","responseData","process","env","REACT_APP_BACKEND_URL","places","name","err","placeDeletedHandler","deletedPlaceId","prevPlaces","filter","place","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SearchContext } from \"../../shared/context/search-context\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Switch from \"../../shared/components/FormElements/SwitchView\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./UserPlaces.css\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const [userPlaces, setUserPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const { inputHandler } = useContext(SearchContext);\r\n\r\n  useEffect(() => {\r\n    inputHandler(\"search\", \"\", false);\r\n  }, [inputHandler]);\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n\r\n        setLoadedPlaces(responseData.places);\r\n        setUserPlaces(responseData.name);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='userPlaces-container'>\r\n      <div className=\"switchView\">\r\n        <Switch\r\n          to={`/${userId}/bucketList`}\r\n          className=\"toBucketList\"\r\n          size=\"middle\"\r\n        >\r\n          TO THIS USER'S BUCKET LIST\r\n        </Switch>\r\n        <Switch\r\n          to={`/${userId}/bucketList`}\r\n          className=\"toBucketListMobile\"\r\n          size=\"middle\"\r\n        >\r\n          TO THIS USER'S BUCKET LIST\r\n        </Switch>\r\n        <Switch\r\n          to={`/${userId}/places`}\r\n          className=\"toPlaceList\"\r\n          size=\"middle\"\r\n          inverse\r\n        >\r\n          TO THIS USER'S PLACE LIST\r\n        </Switch>\r\n        <Switch\r\n          to={`/${userId}/places`}\r\n          className=\"toPlaceListMobile\"\r\n          size=\"middle\"\r\n          inverse\r\n        >\r\n          TO THIS USER'S PLACE LIST\r\n        </Switch>\r\n      </div>\r\n\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList\r\n          items={loadedPlaces}\r\n          userPlaces={userPlaces}\r\n          onDeletePlace={placeDeletedHandler}\r\n        />\r\n      )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"]},"metadata":{},"sourceType":"module"}