{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\user\\\\components\\\\Friends.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport FriendList from './FriendList';\nimport Card from '../../shared/components/UIElements/Card';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport Pagination from '../../shared/components/UIElements/Pagination';\nimport { NotifContext } from '../../shared/context/notif-context';\nimport './Friends.css';\n\nconst Friends = () => {\n  const [loadedFriends, setLoadedFriends] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const {\n    notifFollower\n  } = useContext(NotifContext);\n  const [deleteButtonCount, setDeleteButtonCount] = useState(0);\n  const [postsPerPage] = useState(6);\n  const [currentPage, setCurrentPage] = useState(1);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/friends/${auth.userId}`);\n        setLoadedFriends(responseData.friendsList);\n      } catch (err) {}\n    };\n\n    fetchFriends();\n  }, [sendRequest, auth.userId, deleteButtonCount, notifFollower]);\n\n  const deleteFriend = async (userId, friendId) => {\n    try {\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/friends/delete`, 'DELETE', JSON.stringify({\n        userId: userId,\n        friendId: friendId\n      }), {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + auth.token\n      });\n    } catch (err) {}\n\n    setDeleteButtonCount(currentCount => {\n      return currentCount + 1;\n    });\n  };\n\n  const friendsPerPage = loadedFriends.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loadedFriends.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"No Friend Found\")));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center friends\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friends-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }), !isLoading && loadedFriends && /*#__PURE__*/React.createElement(FriendList, {\n    deleteFriend: deleteFriend,\n    items: friendsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), !isLoading && loadedFriends && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: loadedFriends.length,\n    paginate: paginate,\n    currentPage: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Friends;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/user/components/Friends.js"],"names":["React","useEffect","useState","useContext","FriendList","Card","useHttpClient","AuthContext","LoadingSpinner","ErrorModal","Pagination","NotifContext","Friends","loadedFriends","setLoadedFriends","isLoading","error","sendRequest","clearError","auth","notifFollower","deleteButtonCount","setDeleteButtonCount","postsPerPage","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","fetchFriends","responseData","process","env","REACT_APP_BACKEND_URL","userId","friendsList","err","deleteFriend","friendId","JSON","stringify","Authorization","token","currentCount","friendsPerPage","slice","paginate","pageNumber","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\n\r\nimport FriendList from './FriendList'\r\nimport Card from '../../shared/components/UIElements/Card'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\r\nimport Pagination from '../../shared/components/UIElements/Pagination'\r\nimport { NotifContext } from '../../shared/context/notif-context'\r\n\r\nimport './Friends.css'\r\n\r\nconst Friends = () => {\r\n  const [loadedFriends, setLoadedFriends] = useState([])\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n  const auth = useContext(AuthContext)\r\n  const { notifFollower } = useContext(NotifContext)\r\n  const [deleteButtonCount, setDeleteButtonCount] = useState(0)\r\n\r\n  const [postsPerPage] = useState(6)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const indexOfLastPost = currentPage * postsPerPage\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\r\n\r\n  useEffect(() => {\r\n    const fetchFriends = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/friends/${auth.userId}`\r\n        )\r\n        setLoadedFriends(responseData.friendsList)\r\n      } catch (err) {}\r\n    }\r\n\r\n    fetchFriends()\r\n  }, [sendRequest, auth.userId, deleteButtonCount, notifFollower])\r\n\r\n  const deleteFriend = async (userId, friendId) => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/friends/delete`,\r\n        'DELETE',\r\n        JSON.stringify({\r\n          userId: userId,\r\n          friendId: friendId,\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      )\r\n    } catch (err) {}\r\n    setDeleteButtonCount((currentCount) => {\r\n      return currentCount + 1\r\n    })\r\n  }\r\n\r\n  const friendsPerPage = loadedFriends.slice(indexOfFirstPost, indexOfLastPost)\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\r\n\r\n  if (loadedFriends.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No Friend Found</h2>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"center friends\">\r\n      <div className=\"friends-list\">\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner />}\r\n        {!isLoading && loadedFriends && (\r\n          <FriendList deleteFriend={deleteFriend} items={friendsPerPage} />\r\n        )}\r\n      </div>\r\n\r\n      {!isLoading && loadedFriends && (\r\n        <div className=\"center\">\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={loadedFriends.length}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friends\r\n"]},"metadata":{},"sourceType":"module"}