{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\places\\\\pages\\\\UserPlace.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { SearchContext } from '../../shared/context/search-context';\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Button from '../../shared/components/FormElements/Button';\n\nconst UserPlace = () => {\n  const [loadedPlace, setLoadedPlace] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const {\n    inputHandler\n  } = useContext(SearchContext);\n  const [showDeleteMessage, setShowDeleteMessage] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    inputHandler('search', '', false);\n  }, [inputHandler]);\n  const placeId = useParams().placeId;\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\n        setLoadedPlace([responseData.place]);\n      } catch (err) {}\n    };\n\n    fetchPlace();\n  }, [sendRequest, placeId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    // setLoadedPlace((prevPlaces) =>\n    //     prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    // );\n    setShowDeleteMessage(true);\n  };\n\n  const clearDeleteMessageHandler = () => {\n    setShowDeleteMessage(false);\n    history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: showDeleteMessage,\n    header: \"Delete Notification\",\n    footer: /*#__PURE__*/React.createElement(Button, {\n      onClick: clearDeleteMessageHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Okay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Your Place is deleted!\")), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })), !isLoading && loadedPlace && /*#__PURE__*/React.createElement(PlaceList, {\n    items: loadedPlace,\n    onDeletePlace: placeDeletedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default UserPlace;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/places/pages/UserPlace.js"],"names":["React","useEffect","useState","useContext","useParams","useHistory","SearchContext","PlaceList","ErrorModal","LoadingSpinner","useHttpClient","Modal","Button","UserPlace","loadedPlace","setLoadedPlace","isLoading","error","sendRequest","clearError","inputHandler","showDeleteMessage","setShowDeleteMessage","history","placeId","fetchPlace","responseData","process","env","REACT_APP_BACKEND_URL","place","err","placeDeletedHandler","deletedPlaceId","clearDeleteMessageHandler","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { SearchContext } from '../../shared/context/search-context';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nconst UserPlace = () => {\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const { inputHandler } = useContext(SearchContext);\r\n    const [showDeleteMessage, setShowDeleteMessage] = useState(false);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        inputHandler('search', '', false);\r\n    }, [inputHandler]);\r\n\r\n    const placeId = useParams().placeId;\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n                );\r\n                setLoadedPlace([responseData.place]);\r\n            } catch (err) {}\r\n        };\r\n\r\n        fetchPlace();\r\n    }, [sendRequest, placeId]);\r\n\r\n    const placeDeletedHandler = (deletedPlaceId) => {\r\n        // setLoadedPlace((prevPlaces) =>\r\n        //     prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n        // );\r\n        setShowDeleteMessage(true);\r\n    };\r\n\r\n    const clearDeleteMessageHandler = () => {\r\n        setShowDeleteMessage(false);\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Modal\r\n                show={showDeleteMessage}\r\n                header=\"Delete Notification\"\r\n                footer={\r\n                    <Button onClick={clearDeleteMessageHandler}>Okay</Button>\r\n                }\r\n            >\r\n                <p>Your Place is deleted!</p>\r\n            </Modal>\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && loadedPlace && (\r\n                <PlaceList\r\n                    items={loadedPlace}\r\n                    onDeletePlace={placeDeletedHandler}\r\n                />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserPlace;\r\n"]},"metadata":{},"sourceType":"module"}