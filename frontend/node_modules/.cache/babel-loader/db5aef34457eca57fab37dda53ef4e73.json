{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\lastVersion\\\\place-sharer\\\\frontend\\\\src\\\\user\\\\components\\\\UserProfile\\\\AccountSettings.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport Card from '../../../shared/components/UIElements/Card';\nimport Avatar from '../../../shared/components/UIElements/Avatar';\nimport ImageUpload from '../../../shared/components/FormElements/ImageUpload';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Input from '../../../shared/components/FormElements/Input';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport Modal from '../../../shared/components/UIElements/Modal';\nimport { AuthContext } from '../../../shared/context/auth-context';\nexport default function AccountSettings() {\n  const auth = useContext(AuthContext);\n  const userId = useParams().userId;\n  const [uploadCtrl, setUploadCtrl] = useState(false);\n  const [loadedData, setLoadedData] = useState();\n  const [getUpdateValue, setGetUpdateValue] = useState(0);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const history = useHistory();\n  const [formState, inputHandler] = useForm({\n    name: {\n      value: '',\n      isValid: false\n    },\n    email: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    },\n    confirmPassword: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/profile/${userId}`);\n        setLoadedData(responseData.user);\n        console.log(responseData.user);\n      } catch (err) {}\n    };\n\n    fetchUser();\n  }, [sendRequest, userId, getUpdateValue]);\n\n  const userUpdateSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const formData = new FormData();\n      if (formState.inputs.email.isValid) formData.append('email', formState.inputs.email.value);\n      if (formState.inputs.name.isValid) formData.append('name', formState.inputs.name.value);\n      if (formState.inputs.image.isValid) formData.append('image', formState.inputs.image.value);\n      if (formState.inputs.password.isValid && formState.inputs.password.value === formState.inputs.confirmPassword.value) formData.append('password', formState.inputs.password.value);\n      const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/profile/${userId}`, 'PATCH', formData);\n      setLoadedData(responseData.user);\n      setGetUpdateValue(getUpdateValue + 1);\n      setUploadCtrl(false);\n    } catch (err) {}\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const cancelHandler = () => {\n    setGetUpdateValue(getUpdateValue + 1);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n\n    try {\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/${userId}`, 'DELETE', null, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      setDeleteMessage(true);\n    } catch (err) {}\n  };\n\n  const clearDeleteMessage = () => {\n    setDeleteMessage(false);\n    auth.logout();\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 27\n    }\n  }), !deleteMessage && /*#__PURE__*/React.createElement(Modal, {\n    onCancel: clearError,\n    header: \"An Error Occurred!\",\n    show: !!error,\n    footer: /*#__PURE__*/React.createElement(Button, {\n      onClick: clearError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Okay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Could not loaded User Account Settings \")), /*#__PURE__*/React.createElement(Modal, {\n    show: showConfirmModal,\n    onCancel: cancelDeleteHandler,\n    header: \"Are you sure?\",\n    footerClass: \"place-item__modal-actions\",\n    footer: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      danger: true,\n      onClick: confirmDeleteHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, \"DELETE\"), /*#__PURE__*/React.createElement(Button, {\n      inverse: true,\n      onClick: cancelDeleteHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"CANCEL\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Do you want to proceed and delete your profile? Please note that it can't be undone thereafter.\")), /*#__PURE__*/React.createElement(Modal, {\n    onCancel: clearError,\n    header: \"Delete Notification\",\n    show: deleteMessage,\n    footer: /*#__PURE__*/React.createElement(Button, {\n      onClick: clearDeleteMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, \"Okay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, \"Your account is deleted!\")), !isLoading && loadedData && /*#__PURE__*/React.createElement(Card, {\n    className: \"profile-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"profile\",\n    onSubmit: userUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, !uploadCtrl && /*#__PURE__*/React.createElement(Avatar, {\n    image: loadedData.image,\n    alt: loadedData.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }), uploadCtrl && /*#__PURE__*/React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    errorText: \"Please provide an image.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }), !uploadCtrl && /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: e => {\n      e.preventDefault();\n      setUploadCtrl(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Change Photo\"), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    initialValue: loadedData.name,\n    onInput: inputHandler,\n    onBlur: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters.\",\n    onInput: inputHandler,\n    placeholder: \"Enter your new password\",\n    onBlur: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"confirmPassword\",\n    type: \"password\",\n    label: \"Confirm Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters.\",\n    onInput: inputHandler,\n    placeholder: \"Confirm your new password \",\n    onBlur: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    initialValue: loadedData.email,\n    onInput: inputHandler,\n    onBlur: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !(formState.inputs.name.isValid || formState.inputs.email.isValid || formState.inputs.image.isValid || formState.inputs.password.isValid && formState.inputs.confirmPassword.isValid && formState.inputs.password.value === formState.inputs.confirmPassword.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, \"SAVE\"), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    type: \"button\",\n    onClick: cancelHandler,\n    disabled: !(formState.inputs.name.isValid || formState.inputs.email.isValid || formState.inputs.image.isValid || formState.inputs.password.isValid),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, \"CANCEL\")), /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: () => setShowConfirmModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, \"DELETE ACCOUNT\")));\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/lastVersion/place-sharer/frontend/src/user/components/UserProfile/AccountSettings.js"],"names":["React","useState","useEffect","useContext","useForm","Card","Avatar","ImageUpload","Button","Input","useParams","useHistory","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useHttpClient","LoadingSpinner","Modal","AuthContext","AccountSettings","auth","userId","uploadCtrl","setUploadCtrl","loadedData","setLoadedData","getUpdateValue","setGetUpdateValue","deleteMessage","setDeleteMessage","showConfirmModal","setShowConfirmModal","isLoading","error","sendRequest","clearError","history","formState","inputHandler","name","value","isValid","email","image","password","confirmPassword","fetchUser","responseData","process","env","REACT_APP_BACKEND_URL","user","console","log","err","userUpdateSubmitHandler","event","preventDefault","formData","FormData","inputs","append","cancelDeleteHandler","cancelHandler","confirmDeleteHandler","Authorization","token","clearDeleteMessage","logout","push","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useForm } from '../../../shared/hooks/form-hook';\r\nimport Card from '../../../shared/components/UIElements/Card';\r\nimport Avatar from '../../../shared/components/UIElements/Avatar';\r\nimport ImageUpload from '../../../shared/components/FormElements/ImageUpload';\r\nimport Button from '../../../shared/components/FormElements/Button';\r\nimport Input from '../../../shared/components/FormElements/Input';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport {\r\n    VALIDATOR_EMAIL,\r\n    VALIDATOR_MINLENGTH,\r\n    VALIDATOR_REQUIRE,\r\n} from '../../../shared/util/validators';\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\r\nimport Modal from '../../../shared/components/UIElements/Modal';\r\nimport { AuthContext } from '../../../shared/context/auth-context';\r\n\r\nexport default function AccountSettings() {\r\n    const auth = useContext(AuthContext);\r\n    const userId = useParams().userId;\r\n    const [uploadCtrl, setUploadCtrl] = useState(false);\r\n    const [loadedData, setLoadedData] = useState();\r\n    const [getUpdateValue, setGetUpdateValue] = useState(0);\r\n    const [deleteMessage, setDeleteMessage] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const history = useHistory();\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            name: {\r\n                value: '',\r\n                isValid: false,\r\n            },\r\n            email: {\r\n                value: '',\r\n                isValid: false,\r\n            },\r\n            image: {\r\n                value: '',\r\n                isValid: false,\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: false,\r\n            },\r\n            confirmPassword: {\r\n                value: '',\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/users/profile/${userId}`\r\n                );\r\n                setLoadedData(responseData.user);\r\n                console.log(responseData.user);\r\n            } catch (err) {}\r\n        };\r\n        fetchUser();\r\n    }, [sendRequest, userId, getUpdateValue]);\r\n\r\n    const userUpdateSubmitHandler = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const formData = new FormData();\r\n            if (formState.inputs.email.isValid)\r\n                formData.append('email', formState.inputs.email.value);\r\n            if (formState.inputs.name.isValid)\r\n                formData.append('name', formState.inputs.name.value);\r\n            if (formState.inputs.image.isValid)\r\n                formData.append('image', formState.inputs.image.value);\r\n            if (\r\n                formState.inputs.password.isValid &&\r\n                formState.inputs.password.value ===\r\n                    formState.inputs.confirmPassword.value\r\n            )\r\n                formData.append('password', formState.inputs.password.value);\r\n\r\n            const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/users/profile/${userId}`,\r\n                'PATCH',\r\n                formData\r\n            );\r\n            setLoadedData(responseData.user);\r\n            setGetUpdateValue(getUpdateValue + 1);\r\n            setUploadCtrl(false);\r\n        } catch (err) {}\r\n    };\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    };\r\n\r\n    const cancelHandler = () => {\r\n        setGetUpdateValue(getUpdateValue + 1);\r\n    };\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmModal(false);\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/users/${userId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                }\r\n            );\r\n            setDeleteMessage(true);\r\n        } catch (err) {}\r\n    };\r\n\r\n    const clearDeleteMessage = () => {\r\n        setDeleteMessage(false);\r\n        auth.logout();\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <LoadingSpinner />}\r\n            {!deleteMessage && (\r\n                <Modal\r\n                    onCancel={clearError}\r\n                    header=\"An Error Occurred!\"\r\n                    show={!!error}\r\n                    footer={<Button onClick={clearError}>Okay</Button>}\r\n                >\r\n                    <p>Could not loaded User Account Settings </p>\r\n                </Modal>\r\n            )}\r\n            <Modal\r\n                show={showConfirmModal}\r\n                onCancel={cancelDeleteHandler}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button danger onClick={confirmDeleteHandler}>\r\n                            DELETE\r\n                        </Button>\r\n                        <Button inverse onClick={cancelDeleteHandler}>\r\n                            CANCEL\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n                <p>\r\n                    Do you want to proceed and delete your profile? Please note\r\n                    that it can't be undone thereafter.\r\n                </p>\r\n            </Modal>\r\n            <Modal\r\n                onCancel={clearError}\r\n                header=\"Delete Notification\"\r\n                show={deleteMessage}\r\n                footer={<Button onClick={clearDeleteMessage}>Okay</Button>}\r\n            >\r\n                <p>Your account is deleted!</p>\r\n            </Modal>\r\n            {!isLoading && loadedData && (\r\n                <Card className=\"profile-card\">\r\n                    <h2>Profile</h2>\r\n                    <hr />\r\n                    <form\r\n                        className=\"profile\"\r\n                        onSubmit={userUpdateSubmitHandler}\r\n                    >\r\n                        {!uploadCtrl && (\r\n                            <Avatar\r\n                                image={loadedData.image}\r\n                                alt={loadedData.name}\r\n                            />\r\n                        )}\r\n                        {uploadCtrl && (\r\n                            <ImageUpload\r\n                                center\r\n                                id=\"image\"\r\n                                onInput={inputHandler}\r\n                                errorText=\"Please provide an image.\"\r\n                            />\r\n                        )}\r\n                        {!uploadCtrl && (\r\n                            <Button\r\n                                inverse\r\n                                onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setUploadCtrl(true);\r\n                                }}\r\n                            >\r\n                                Change Photo\r\n                            </Button>\r\n                        )}\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Your Name\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter a name.\"\r\n                            initialValue={loadedData.name}\r\n                            onInput={inputHandler}\r\n                            onBlur={true}\r\n                        />\r\n\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            validators={[VALIDATOR_MINLENGTH(6)]}\r\n                            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n                            onInput={inputHandler}\r\n                            placeholder=\"Enter your new password\"\r\n                            onBlur={true}\r\n                        />\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            label=\"Confirm Password\"\r\n                            validators={[VALIDATOR_MINLENGTH(6)]}\r\n                            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n                            onInput={inputHandler}\r\n                            placeholder=\"Confirm your new password \"\r\n                            onBlur={true}\r\n                        />\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            label=\"E-Mail\"\r\n                            validators={[VALIDATOR_EMAIL()]}\r\n                            errorText=\"Please enter a valid email address.\"\r\n                            initialValue={loadedData.email}\r\n                            onInput={inputHandler}\r\n                            onBlur={true}\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            disabled={\r\n                                !(\r\n                                    formState.inputs.name.isValid ||\r\n                                    formState.inputs.email.isValid ||\r\n                                    formState.inputs.image.isValid ||\r\n                                    (formState.inputs.password.isValid &&\r\n                                        formState.inputs.confirmPassword\r\n                                            .isValid &&\r\n                                        formState.inputs.password.value ===\r\n                                            formState.inputs.confirmPassword\r\n                                                .value)\r\n                                )\r\n                            }\r\n                        >\r\n                            SAVE\r\n                        </Button>\r\n                        <Button\r\n                            inverse\r\n                            type=\"button\"\r\n                            onClick={cancelHandler}\r\n                            disabled={\r\n                                !(\r\n                                    formState.inputs.name.isValid ||\r\n                                    formState.inputs.email.isValid ||\r\n                                    formState.inputs.image.isValid ||\r\n                                    formState.inputs.password.isValid\r\n                                )\r\n                            }\r\n                        >\r\n                            CANCEL\r\n                        </Button>\r\n                    </form>\r\n                    <Button danger onClick={() => setShowConfirmModal(true)}>\r\n                        DELETE ACCOUNT\r\n                    </Button>\r\n                </Card>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}